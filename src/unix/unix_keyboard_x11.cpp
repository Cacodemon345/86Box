#include <X11/Xlib.h>
#include <X11/Xdefs.h>
#include <X11/keysym.h>
#include <unordered_map>
#include <cstdlib>
#include <cinttypes>
#include <stdio.h>

std::unordered_map<uint32_t, uint16_t> x11_to_xt
{
    {XK_1, 0x02},
    {XK_2, 0x03},
    {XK_3, 0x04},
    {XK_4, 0x05},
    {XK_5, 0x06},
    {XK_6, 0x07},
    {XK_7, 0x08},
    {XK_8, 0x09},
    {XK_9, 0x0A},
    {XK_0, 0x0B},
    {XK_minus, 0x0C},
    {XK_equal, 0x0D},
    {XK_BackSpace, 0x0E},
    {XK_Tab, 0x0F},
    {XK_q, 0x10},
    {XK_w, 0x11},
    {XK_e, 0x12},
    {XK_r, 0x13},
    {XK_t, 0x14},
    {XK_y, 0x15},
    {XK_u, 0x16},
    {XK_i, 0x17},
    {XK_o, 0x18},
    {XK_p, 0x19},
    {XK_bracketleft, 0x1A},
    {XK_bracketright, 0x1B},
    {XK_Return, 0x1C},
    {XK_Control_L, 0x1D},
    {XK_a, 0x1E},
    {XK_s, 0x1F},
    {XK_d, 0x20},
    {XK_f, 0x21},
    {XK_g, 0x22},
    {XK_h, 0x23},
    {XK_j, 0x24},
    {XK_k, 0x25},
    {XK_l, 0x26},
    {XK_semicolon, 0x27},
    {XK_apostrophe, 0x28},
    {XK_grave, 0x29},
    {XK_Shift_L, 0x2A},
    {XK_backslash, 0x2B},
    {XK_z, 0x2C},
    {XK_x, 0x2D},
    {XK_c, 0x2E},
    {XK_v, 0x2F},
    {XK_b, 0x30},
    {XK_n, 0x31},
    {XK_m, 0x32},
    {XK_comma, 0x33},
    {XK_period, 0x34},
    {XK_slash, 0x35},
    {XK_Shift_R, 0x36},
    {XK_KP_Multiply, 0x37},
    {XK_Alt_L, 0x38},
    {XK_space, 0x39},
    {XK_Caps_Lock, 0x3A},
    {XK_F1, 0x3B},
    {XK_F2, 0x3C},
    {XK_F3, 0x3D},
    {XK_F4, 0x3E},
    {XK_F5, 0x3F},
    {XK_F6, 0x40},
    {XK_F7, 0x41},
    {XK_F8, 0x42},
    {XK_F9, 0x43},
    {XK_F10, 0x44},
    {XK_Num_Lock, 0x45},
    {XK_Scroll_Lock, 0x46},
    {XK_Home, 0x147},
    {XK_Up, 0x148},
    {XK_Page_Up, 0x149},
    {XK_KP_Subtract, 0x4A},
    {XK_Left, 0x14B},
    {XK_KP_5, 0x4C},
    {XK_Right, 0x14D},
    {XK_KP_Add, 0x4E},
    {XK_End, 0x14F},
    {XK_Down, 0x150},
    {XK_Page_Down, 0x151},
    {XK_Insert, 0x152},
    {XK_Delete, 0x153},
    {XK_F11, 0x57},
    {XK_F12, 0x58},

    {XK_KP_Enter, 0x11C},
    {XK_Control_R, 0x11D},
    {XK_KP_Divide, 0x135},
    {XK_Alt_R, 0x138},
    {XK_KP_9, 0x49},
    {XK_KP_Page_Up, 0x49},
    {XK_KP_8, 0x48},
    {XK_KP_Up, 0x48},
    {XK_KP_7, 0x47},
    {XK_KP_Home, 0x47},
    {XK_KP_6, 0x4D},
    {XK_KP_Right, 0x4D},
    {XK_KP_4, 0x4B},
    {XK_KP_Left, 0x4B},
    {XK_KP_3, 0x51},
    {XK_KP_Page_Down, 0x51},
    {XK_KP_2, 0x50},
    {XK_KP_Down, 0x50},
    {XK_KP_1, 0x4F},
    {XK_KP_End, 0x4F},
    {XK_KP_0, 0x52},
    {XK_KP_Insert, 0x52},
    {XK_KP_Delete, 0x53},
    {XK_Super_L, 0x15B},
    {XK_Super_R, 0x15C},
    {XK_Menu, 0x15D},
    {XK_Sys_Req, 0x137}
};
static Display* x11display;
uint16_t x11_keycode_to_keysym(uint32_t keycode)
{
    if (!x11display) x11display = XOpenDisplay(nullptr);
    auto res = XKeycodeToKeysym(x11display, keycode, 0);
    return x11_to_xt[XKeycodeToKeysym(x11display, keycode, 0)];
}