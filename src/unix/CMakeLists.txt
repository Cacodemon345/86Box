if (${CMAKE_SYSTEM_NAME} MATCHES "Linux")
    find_package(ALSA)
    if (ALSA_FOUND)
        set(PLAT_SOURCES linux_midi_alsa.c)
    else()
        set(PLAT_SOURCES unix_midi.c)
    endif()
else()
    set(PLAT_SOURCES unix_midi.c)
endif()

set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_AUTOUIC ON)

find_package(Qt5 REQUIRED COMPONENTS Widgets Gui REQUIRED)
if (NOT APPLE)
    find_package(X11 REQUIRED)
endif()
list (APPEND PLAT_SOURCES unix_keyboard_x11.cpp)

qt5_generate_moc(${CMAKE_SOURCE_DIR}/src/include/86box/unix.h ${CMAKE_BINARY_DIR}/src/qt5_ui.cpp)
add_library(plat STATIC ${PLAT_SOURCES} unix_file.c unix_timer.c unix_thread.c)
add_library(ui STATIC unix.cpp unix_sdl.c unix_cdrom.c ${CMAKE_BINARY_DIR}/src/qt5_ui.cpp)
target_compile_definitions(ui PUBLIC _FILE_OFFSET_BITS=64)
target_link_libraries(ui dl uicommon plat)
target_link_libraries(ui Qt5::Widgets Qt5::Gui)
if (NOT APPLE)
    target_link_libraries(ui X11::X11)
endif()
target_link_libraries(plat Qt5::Widgets Qt5::Gui)
if (NOT APPLE)
    target_link_libraries(plat X11::X11)
endif()
if (ALSA_FOUND)
    target_link_libraries(plat ALSA::ALSA)
endif()
target_link_libraries(ui pthread)
